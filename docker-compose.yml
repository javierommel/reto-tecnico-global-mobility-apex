version: '3.8'

services:
  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: ordersdb
      POSTGRES_USER: user
      POSTGRES_PASSWORD: pass
    ports:
      - "5435:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    networks:
      - backend
      
  zookeeper:
    image: bitnami/zookeeper:3.8
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    ports:
      - "2181:2181"
    networks:
      - backend

  kafka:
    image: bitnami/kafka:3.5
    ports:
      - "9092:9092"
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_LISTENERS=PLAINTEXT://:9092
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      - zookeeper
    networks:
      - backend
  
  mongodb:
    image: mongo:6
    ports:
      - "27017:27017"
    networks:
      - backend
    volumes:
      - mongo-data:/data/db
   
  redis:
    image: redis:7
    ports:
      - "6379:6379"
    networks:
      - backend
  goapi:
    build:
      context: ./go-api
    ports:
      - "8083:8083"
    environment:
      - DATABASE_URL=postgres://user:pass@postgres:5432/ordersdb
    depends_on:
      - postgres
    networks:
      - backend
  orderworker:
    build:
      context: ./orderworker
    depends_on:
      - kafka
      - redis
      - mongodb
      - goapi
    environment:
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - SPRING_DATA_MONGODB_URI=mongodb://mongodb:27017/pedidosdb
      - SPRING_REDIS_HOST=redis
      - SPRING_REDIS_PORT=6379
      - SPRING_EXTERNAL_API_BASE_URL=http://goapi:8083
      - SPRING_MAX_ATTEMPTS=5
      - SPRING_KAFKA_CONSUMER_AUTO_OFFSET_RESET=latest
    ports:
      - "8081:8081"
    networks:
      - backend
  orderproducer:
    build:
      context: ./orderproducer
    ports:
      - "8082:8082"
    environment:
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:9092
    depends_on:
      - kafka
    networks:
      - backend
  
volumes:
  pgdata:
  mongo-data:
  
networks:
  backend:

